{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","NotesAppBar","date","noteDate","moment","format","style","display","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.df41d9bc.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    \r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note', \r\n    notesActive: '[Notes] Set active note', \r\n    notesLoad: '[Notes] Load notes', \r\n    notesUpdated: '[Notes] Updated note', \r\n    notesFileUrl: '[Notes] Updated image url', \r\n    notesDelete: '[Notes] Delete note', \r\n    notesLogoutCleaning: '[Notes] Logout cleaning', \r\n}","/*\r\n{\r\n    notes: [],\r\n    active: null,\r\n    active: {\r\n        id: 'asdasdfafaa654163'\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 1354321331\r\n\r\n    }\r\n}\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n        return {\r\n            ...state,\r\n            active: {\r\n                ...action.payload\r\n            }\r\n        }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            \r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                msgError: null\r\n            }\r\n        case types.uiFinishLoading:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            msgError: null\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        uid: 'asdasfsdd64632',\r\n        name: 'Player000'\r\n    }\r\n\r\n*/\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }    \r\n\r\n        case types.logout:\r\n            return { }\r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyApZr5rUYwcRkVZHqzc3LdTSE8jAaw-JxQ\",\r\n    authDomain: \"react-app-journal-12d85.firebaseapp.com\",\r\n    projectId: \"react-app-journal-12d85\",\r\n    storageBucket: \"react-app-journal-12d85.appspot.com\",\r\n    messagingSenderId: \"692037924935\",\r\n    appId: \"1:692037924935:web:13a4e90cbf28ddc9151962\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = ' https://api.cloudinary.com/v1_1/dtraadneb/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n}\r\n","import { db } from '../firebase/firebase-config';\r\n\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}\r\n\r\n\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n// react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    } \r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note }\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n\r\n        // console.log(fileUrl);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n  \r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ));\r\n\r\n        Swal.fire('Deleted', 'Note deleted successfully', 'success');\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});","import { types } from '../types/types';\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\"\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = ( email, password) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                \r\n                dispatch( finishLoading() );\r\n\r\n            }).catch( e => {\r\n                // console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile( { displayName: name } );\r\n                \r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            }).catch( e => {\r\n                // console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName \r\n    }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        // email: 'user@gmail.com',\r\n        // password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social network</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        // name: 'Player000',\r\n        // email: 'user@gmail.com',\r\n        // password: '123456',\r\n        // password2: '123456',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                { \r\n                   msgError &&\r\n                   (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                   )\r\n                }\r\n\r\n                 <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ email }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password2 }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import moment from 'moment';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const { date } = active;\r\n    const noteDate = moment(date);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{  noteDate.format('MMMM Do YYYY') }</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n    const activeId = useRef( note.id )\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n        \r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, {...formValues} ) );\r\n        \r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(id) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    name=\"title\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    name=\"body\"\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    ( note.url )\r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url } \r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select Something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote( id, {\r\n            date, title, body, url\r\n            }) \r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__backInDown animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url( ${ url } )`\r\n                }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n        {\r\n            notes.map( note => (\r\n                <JournalEntry \r\n                    key={ note.id }\r\n                    {...note} \r\n                />\r\n            ))\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active  )\r\n                        ? ( <NoteScreen /> )\r\n                        : (<NothingSelected />)\r\n                }\r\n\r\n            </main>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState( false );\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged( ( user ) => {\r\n\r\n      if ( user?.uid) {\r\n        dispatch( login( user.uid, user.displayName ));\r\n        setIsLoggedIn( true );\r\n\r\n        dispatch( startLoadingNotes( user.uid ) );\r\n\r\n      } else {\r\n        setIsLoggedIn( false );\r\n      }\r\n\r\n      setChecking(false);\r\n\r\n    });\r\n  }, [ dispatch, setChecking, setIsLoggedIn ])\r\n\r\n\r\n    if ( checking ) {\r\n      return (\r\n        <h1>Wait...</h1>\r\n      )\r\n    }\r\n\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n\r\n            <PublicRoute \r\n                path=\"/auth\"\r\n                isAuthenticated={ isLoggedIn }\r\n                component={ AuthRouter }\r\n            />\r\n\r\n            <PrivateRoute \r\n              path=\"/\"\r\n              isAuthenticated={ isLoggedIn }\r\n              exact\r\n              component={ JournalScreen }\r\n            />\r\n\r\n            <Redirect to=\"/auth/login\" />\r\n          \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}